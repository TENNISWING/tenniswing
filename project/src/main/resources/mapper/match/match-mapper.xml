<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

  <mapper namespace="com.tenniswing.project.match.mapper.MatchMapper">
  	<!-- 전체 조회  -->
  	<select id="selectAllMatch" resultType="MatchVO">
  		select * from (    select A.* , rownum rn from (
  		
  		SELECT      m.match_no,
                    m.mem_id,
                    m.match_date,
                    m.time,
                    m.game_way,
                    FIND_CATEGORY_NAME (m.game_way)   game_way_name,
                    m.prog_state,
                    FIND_CATEGORY_NAME (m.prog_state)   prog_state_name,
                    m.ntrp,
                    m.lv,
                    m.gen,
                    FIND_CATEGORY_NAME (m.gen)  gen_name,
                    m.crt_use_amt,
                    m.recruit_psn_num,
                    m.detail_ctt,
                    c.crtroom_no,
                    c.crtroom_name,
                    c.crtroom_location,
                    FIND_CATEGORY_NAME (c.crtroom_location)  crtroom_location_name
  		FROM match m, crtroom c
  		WHERE m.crtroom_no = c.crtroom_no
  		 AND TRUNC (match_date) = TRUNC(#{matchDate})
 		 <if test="gen != null and gen != ''">and gen = #{gen}</if>
 		 <if test="crtroomLocation != null and crtroomLocation != ''">and crtroom_location = #{crtroomLocation}</if>
 		 <if test="progStateName != null and progStateName != ''">and prog_state_name = #{progStateName}</if>
  		ORDER BY time
  		
  		) A) b where rn between (#{page}-1)*#{pageUnit} + 1 and #{page} * #{pageUnit}
   	</select>
   	
   	<select id="selectCount" resultType="int">
   		select count(*)
   		FROM match m, crtroom c
  		WHERE m.crtroom_no = c.crtroom_no
  		 AND TRUNC (match_date) = TRUNC(#{matchDate})
 		 <if test="gen != null and gen != ''">and gen = #{gen}</if>
 		 <if test="crtroomLocation != null and crtroomLocation != ''">and crtroom_location = #{crtroomLocation}</if>
 		 <if test="progStateName != null and progStateName != ''">and prog_state_name = #{progStateName}</if>
   	</select>
   	
   	<!-- 클럽 전체 조회  -->
  	<select id="selectAllClubMatch" resultType="MatchVO">
  		select * from (    select A.* , rownum rn from (
  	
  		SELECT m.match_no
  				, m.club_name
  				, m.match_date
  				, m.time
  				, m.game_way
  				, FIND_CATEGORY_NAME (m.game_way)   game_way_name
  				, m.prog_state
  				, FIND_CATEGORY_NAME (m.prog_state)   prog_state_name
  				, m.recruit_psn_num
  				, m.club_no
  				, m.ntrp
  				, m.lv
  				, FIND_CATEGORY_NAME (m.lv)  lv_name
  				, m.crt_use_amt
  				, m.detail_ctt
  				, m.crtroom_no
  				, c.crtroom_name
                , c.crtroom_location
                , FIND_CATEGORY_NAME (c.crtroom_location)  crtroom_location_name
  		FROM club_match m, crtroom c
  		WHERE m.crtroom_no = c.crtroom_no
  		AND TRUNC (match_date) = TRUNC(#{matchDate})
 		 <if test="gameWay != null and gameWay != ''">and game_way = #{gameWay}</if>
 		 <if test="crtroomLocation != null and crtroomLocation != ''">and crtroom_location = #{crtroomLocation}</if>
 		 <if test="progStateName != null and progStateName != ''">and prog_state_name = #{progStateName}</if>
  		ORDER BY time
  		
  		) A) b where rn between (#{page}-1)*#{pageUnit} + 1 and #{page} * #{pageUnit}
   	</select>
   	
   	<select id="selectClubCount" resultType="int">
   		select count(*)
   		FROM club_match m, crtroom c
  		WHERE m.crtroom_no = c.crtroom_no
  		AND TRUNC (match_date) = TRUNC(#{matchDate})
 		 <if test="gameWay != null and gameWay != ''">and game_way = #{gameWay}</if>
 		 <if test="crtroomLocation != null and crtroomLocation != ''">and crtroom_location = #{crtroomLocation}</if>
 		 <if test="progStateName != null and progStateName != ''">and prog_state_name = #{progStateName}</if>
   	</select>
   	
   	<!-- 대회 전체 조회  -->
  	<select id="selectAllContMatch" resultType="MatchVO">
  	select * from (    select A.* , rownum rn from (
  	
  		SELECT m.match_no
  				, m.cont_name
  				, m.start_date
  				, m.end_date
  				, m.time
  				, m.prog_state
  				, FIND_CATEGORY_NAME (m.prog_state)   prog_state_name
  				, m.recruit_psn_num
  				, m.ntrp
  				, m.lv
  				, m.cont_attend_cost
  				, m.detail_ctt
  				, m.crtroom_no
  				, c.crtroom_name
  				, c.crtroom_location
                , FIND_CATEGORY_NAME (c.crtroom_location)  crtroom_location_name
  		FROM cont_match m, crtroom c
  		WHERE m.crtroom_no = c.crtroom_no
  		AND TRUNC(start_date) = TRUNC(#{matchDate})
 		 <if test="crtroomLocation != null and crtroomLocation != ''">and crtroom_location = #{crtroomLocation}</if>
 		 <if test="progStateName != null and progStateName != ''">and prog_state_name = #{progStateName}</if>
  		ORDER BY time
  		
  		) A) b where rn between (#{page}-1)*#{pageUnit} + 1 and #{page} * #{pageUnit}
   	</select>
   	
   	<select id="selectContCount" resultType="int">
   		select count(*)
   		FROM cont_match m, crtroom c
  		WHERE m.crtroom_no = c.crtroom_no
  		AND TRUNC(start_date) = TRUNC(#{matchDate})
 		 <if test="crtroomLocation != null and crtroomLocation != ''">and crtroom_location = #{crtroomLocation}</if>
 		 <if test="progStateName != null and progStateName != ''">and prog_state_name</if>
   	</select>

	<!-- 스타터 전체 조회  -->
  	<select id="selectAllStarterMatch" resultType="MatchVO">
  	select * from (    select A.* , rownum rn from (
  	
  		SELECT m.match_no
  				, m.mem_id
  				, m.match_date
  				, m.time
  				, m.prog_state
  				, FIND_CATEGORY_NAME (m.prog_state)   prog_state_name
  				, m.ntrp
  				, FIND_CATEGORY_NAME (m.ntrp)  ntrp_name
  				, m.lv
  				, m.gen
  				, FIND_CATEGORY_NAME (m.gen)  gen_name
  				, m.rsprice
  				, m.recruit_psn_num
  				, m.detail_ctt
  				, m.crtroom_no
  				, c.crtroom_name
  				, c.crtroom_location
                , FIND_CATEGORY_NAME (c.crtroom_location)  crtroom_location_name
  		FROM starter_match m, crtroom c
  		WHERE m.crtroom_no = c.crtroom_no
  		AND TRUNC (match_date) = TRUNC(#{matchDate})
 		 <if test="gen != null and gen != ''">and gen = #{gen}</if>
 		 <if test="ntrp != null and ntrp != ''">and ntrp = #{ntrp}</if>
 		 <if test="crtroomLocation != null and crtroomLocation != ''">and crtroom_location = #{crtroomLocation}</if>
 		 <if test="progStateName != null and progStateName != ''">and prog_state_name = #{progStateName}</if>
  		ORDER BY time
  		
  		) A) b where rn between (#{page}-1)*#{pageUnit} + 1 and #{page} * #{pageUnit}
   	</select>
   	
   	<select id="selectStarterCount" resultType="int">
   		select count(*)
   		FROM starter_match m, crtroom c
  		WHERE m.crtroom_no = c.crtroom_no
  		AND TRUNC (match_date) = TRUNC(#{matchDate})
  		 <if test="gen != null and gen != ''">and gen = #{gen}</if>
 		 <if test="ntrp != null and ntrp != ''">and ntrp = #{ntrp}</if>
 		 <if test="crtroomLocation != null and crtroomLocation != ''">and crtroom_location = #{crtroomLocation}</if>
 		 <if test="progStateName != null and progStateName != ''">and prog_state_name = #{progStateName}</if>
   	</select>

  	<!-- 단건조회 -->
  	<select id="selectMatch" resultType="MatchVO">
  		SELECT m.match_no
  				, m.mem_id
  				, m.match_date
  				, m.time
  				, m.game_way
  				, FIND_CATEGORY_NAME (m.game_way)   game_way_name
  				, m.prog_state
  				, m.ntrp
  				, m.lv
  				, FIND_CATEGORY_NAME (m.lv)   lv_name
  				, m.gen
  				, FIND_CATEGORY_NAME (m.gen)   gen_name
  				, m.crt_use_amt
  				, m.recruit_psn_num
  				, m.detail_ctt
  				, m.crtroom_no
                , c.crtroom_name
                , c.crtroom_location
  		FROM match m, crtroom c
  		WHERE m.crtroom_no = c.crtroom_no
  		and m.match_no = #{matchNo}
  	</select>
  	
  	<!-- 클럽 단건조회 -->
  	<select id="selectClubMatch" resultType="MatchVO">
  		SELECT m.match_no
  				, m.club_name
  				, m.match_date
  				, m.time
  				, m.game_way
  				, FIND_CATEGORY_NAME (m.game_way)   game_way_name
  				, m.prog_state
  				, m.ntrp
  				, m.lv
  				, FIND_CATEGORY_NAME (m.lv)   lv_name
  				, m.crt_use_amt
  				, m.recruit_psn_num
  				, m.detail_ctt
  				, m.crtroom_no
                , c.crtroom_name
                , c.crtroom_location
                , r.club_match_recruit_psn_num
                , r.match_recruit_write_date
  		FROM club_match m, crtroom c, club_match_recruit r
  		WHERE m.crtroom_no = c.crtroom_no
  		and m.match_no = r.match_no
        and m.match_no = #{matchNo}
  	</select>
  	
  	<!-- 대회 단건조회 -->
  	<select id="selectContMatch" resultType="MatchVO">
  		SELECT c.match_no
  				, c.cont_name
  				, c.start_date
  				, c.end_date
  				, c.time
  				, c.prog_state
  				, c.recruit_psn_num
  				, c.ntrp
  				, c.lv
  				, FIND_CATEGORY_NAME (c.lv)   lv_name
  				, c.cont_attend_cost
  				, c.detail_ctt
  				, c.crtroom_no
                , b.crtroom_name
                , b.crtroom_location
  		FROM cont_match c, crtroom b
  		WHERE c.crtroom_no = b.crtroom_no
        AND c.match_no = #{matchNo}
  	</select>
  	
  	<!-- 스타터 단건조회 -->
  	<select id="selectStarterMatch" resultType="MatchVO">
  		SELECT s.match_no
  				, s.mem_id
  				, s.match_date
  				, s.time
  				, s.prog_state
  				, s.ntrp
  				, s.lv
  				, FIND_CATEGORY_NAME (s.lv)  lv_name
  				, s.gen
  				, FIND_CATEGORY_NAME (s.gen)  gen_name
  				, s.rsprice
  				, s.recruit_psn_num
  				, s.detail_ctt
  				, s.crtroom_no
  				, c.crtroom_name
  				, c.crtroom_location
  				, FIND_CATEGORY_NAME (c.crtroom_location)  crtroom_location_name
  		FROM starter_match s, crtroom c
  		WHERE s.crtroom_no = c.crtroom_no
  		AND match_no = #{matchNo}
  	</select>
  	
  	<!-- 등록 -->
  	<insert id="insertMatch" parameterType="MatchVO">
  	 	<selectKey keyProperty="matchNo" 
  	 			   resultType="int" 
  	 			   order="BEFORE">
  	 		<!-- primarykey가 숫자일 경우 사용 -->
  	 		SELECT NVL(MAX(match_no), 0) + 1 
			FROM match
  	 	</selectKey>
  	 	INSERT INTO match
  	 			(
	  	 			match_no
	  				, mem_id
	  				, match_date
	  				, time
	  				, game_way
	  				, prog_state
	  				, ntrp
	  				, lv
	  				, gen
	  				, crt_use_amt
	  				, recruit_psn_num
	  				, detail_ctt
	  				, crtroom_no
  	 			)
  	 			VALUES
  	 			(
  	 				#{matchNo}
  	 				,#{memNo}
  	 				,#{matchDate}
  	 				,#{time}
  	 				,#{gameWay}
  	 				,#{progState}
  	 				,#{ntrp}
  	 				,#{lv}
  	 				,#{gen}
  	 				,#{crtUseAmt}
  	 				,#{recruitPsnNum}
  	 				,#{detailCtt}
  	 				,#{crtroomNo}  	 				
  	 			)  	 			
  	</insert>
  	
  	<!-- 클럽 등록 -->
  	<insert id="insertClubMatch" parameterType="MatchVO">
  	 	<selectKey keyProperty="matchNo" 
  	 			   resultType="int" 
  	 			   order="BEFORE">
  	 		<!-- primarykey가 숫자일 경우 사용 -->
  	 		SELECT NVL(MAX(match_no), 0) + 1 
			FROM match
  	 	</selectKey>
  	 	INSERT INTO club_match
  	 			(
		  	 		match_no
	  				, club_name
	  				, match_date
	  				, time
	  				, game_way
	  				, prog_state
	  				, recruit_psn_num
	  				, club_no
	  				, ntrp
	  				, lv
	  				, crt_use_amt
	  				, detail_ctt
	  				, crtroom_no
  	 			)
  	 			VALUES
  	 			(
  	 				#{matchNo}
  	 				,#{clubName}
  	 				,#{matchDate}
  	 				,#{time}
  	 				,#{gameWay}
  	 				,#{progState}
  	 				,#{recruitPsnNum}
  	 				,#{clubNo}
  	 				,#{ntrp}
  	 				,#{lv}
  	 				,#{crtUseAmt}
  	 				,#{detailCtt}
  	 				,#{crtroomNo}  	 				
  	 			)  	 			
  	</insert>
  	
  	<!-- 대회 등록 -->
  	<insert id="insertContMatch" parameterType="MatchVO">
  	 	<selectKey keyProperty="matchNo" 
  	 			   resultType="int" 
  	 			   order="BEFORE">
  	 		<!-- primarykey가 숫자일 경우 사용 -->
  	 		SELECT NVL(MAX(match_no), 0) + 1 
			FROM match
  	 	</selectKey>
  	 	INSERT INTO cont_match
  	 			(
	  	 			match_no
	  				, cont_name
	  				, start_date
	  				, end_date
	  				, time
	  				, prog_state
	  				, recruit_psn_num
	  				, ntrp
	  				, lv
	  				, cont_attend_cost
	  				, detail_ctt
	  				, crtroom_no
  	 			)
  	 			VALUES
  	 			(
  	 				#{matchNo}
  	 				,#{contName}
  	 				,#{startDate}
  	 				,#{endDate}
  	 				,#{time}
  	 				,#{progState}
  	 				,#{ntrp}
  	 				,#{lv}
  	 				,#{contAttendCost}
  	 				,#{detailCtt}
  	 				,#{crtroomNo}  	 				
  	 			)  	 			
  	</insert>
  	
  	  	
  	<!-- 스타터 등록 -->
  	<insert id="insertStarterMatch" parameterType="MatchVO">
  	 	<selectKey keyProperty="matchNo" 
  	 			   resultType="int" 
  	 			   order="BEFORE">
  	 		<!-- primarykey가 숫자일 경우 사용 -->
  	 		SELECT NVL(MAX(match_no), 0) + 1 
			FROM match
  	 	</selectKey>
  	 	INSERT INTO starter_match
  	 			(
	  	 			match_no
	  				, mem_id
	  				, match_date
	  				, time
	  				, prog_state
	  				, ntrp
	  				, lv
	  				, gen
	  				, rsprice
	  				, recruit_psn_num
	  				, detail_ctt
	  				, crtroom_no
  	 			)
  	 			VALUES
  	 			(
  	 				#{matchNo}
  	 				,#{memNo}
  	 				,#{matchDate}
  	 				,#{time}
  	 				,#{progState}
  	 				,#{ntrp}
  	 				,#{lv}
  	 				,#{gen}
  	 				,#{rsprice}
  	 				,#{recruitPsnNum}
  	 				,#{detailCtt}
  	 				,#{crtroomNo}  		 				
  	 			)  	 			
  	</insert>	
  	  	
  	<!-- 수정 -->
  	<update id="updateMatch" parameterType="MatchVO">
  		UPDATE match
  			SET
  				match_no = #{matchNo}
	  				, mem_id = #{memNo}
	  				, match_date = #{matchDate}
	  				, time = #{time}
	  				, game_way = #{gameWay}
	  				, prog_state = #{progState}
	  				, ntrp = #{ntrp}
	  				, lv = #{lv}
	  				, gen = #{gen}
	  				, crt_use_amt = #{crtUseAmt}
	  				, recruit_psn_num = #{recruitPsnNum}
	  				, detail_ctt = #{detailCtt}
	  				, crtroom_no = #{crtroomNo}
  		WHERE match_no = #{matchNo}
  	</update>
  	  	
  	  	<!-- 클럽 수정 -->
  	<update id="updateClubMatch" parameterType="MatchVO">
  		UPDATE club_match
  			SET
  				match_no = #{matchNo}
	  				, club_name = #{clubNmae}
	  				, match_date = #{matchDate}
	  				, time = #{time}
	  				, game_way = #{gameWay}
	  				, prog_state = #{progState}
	  				, recruit_psn_num = #{recruitPsnNum}
	  				, club_no = #{clubNo}
	  				, ntrp = #{ntrp}
	  				, lv = #{lv}
	  				, crt_use_amt = #{crtUseAmt}
	  				, detail_ctt = #{detailCtt}
	  				, crtroom_no = #{crtroomNo}
  		WHERE match_no = #{matchNo}
  	</update>
  	  	
  	  	<!-- 대회 수정 -->
  	<update id="updateContMatch" parameterType="MatchVO">
  		UPDATE cont_match
  			SET
  				match_no = #{matchNo}
	  				, cont_name = #{contName}
	  				, start_date = #{startDate}
	  				, end_date = #{endDate}
	  				, time = #{time}
	  				, prog_state = #{progState}
	  				, recruit_psn_num = #{recruitPsnNum}
	  				, ntrp = #{ntrp}
	  				, lv = #{lv}
	  				, cont_attend_cost = #{contAttendCost}
	  				, detail_ctt = #{detailCtt}
	  				, crtroom_no = #{crtroomNo}
  		WHERE match_no = #{matchNo}
  	</update>
  	  	
  	  	<!-- 스타터 수정 -->
  	<update id="updateStarterMatch" parameterType="MatchVO">
  		UPDATE starter_match
  			SET
  				match_no = #{matchNo}
	  				, mem_id = #{memNo}
	  				, match_date = #{matchDate}
	  				, time = #{time}
	  				, prog_state = #{progState}
	  				, ntrp = #{ntrp}
	  				, lv = #{lv}
	  				, gen = #{gen}
	  				, rsprice = #{rsprice}
	  				, recruit_psn_num = #{recruitPsnNum}
	  				, detail_ctt = #{detailCtt}
	  				, crtroom_no = #{crtroomNo}
  		WHERE match_no = #{matchNo}
  	</update>
  	  	
  	<!-- 삭제 -->
  	<delete id="deleteMatch" parameterType="int">
  		DELETE FROM match
  		WHERE match_no = #{matchNo}
  	</delete>
  	
  	<!-- 클럽 삭제 -->
  	<delete id="deleteClubMatch" parameterType="int">
  		DELETE FROM club_match
  		WHERE match_no = #{matchNo}
  	</delete>
  	
  	<!-- 대회 삭제 -->
  	<delete id="deleteContMatch" parameterType="int">
  		DELETE FROM cont_match
  		WHERE match_no = #{matchNo}
  	</delete>
  	
  	<!-- 스타터 삭제 -->
  	<delete id="deleteStarterMatch" parameterType="int">
  		DELETE FROM starter_match
  		WHERE match_no = #{matchNo}
  	</delete>
  	
  </mapper>