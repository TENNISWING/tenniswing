<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="com.tenniswing.project.community.mapper.SnsMapper">
	<!-- 전체 조회 -->
	<resultMap type="SnsVO" id="snsResult">
	    <id column="sns_wrt_no" property="snsWrtNo"/>
		<collection property="attachList" javaType="ArrayList"
			column="sns_wrt_no" ofType="AttachVO" select="attachListAllSns"></collection>
	</resultMap>
	<select id="selectAllSnsInfo" resultMap="snsResult">
		select s.sns_wrt_no 
				, s.sns_title
				, s.sns_ctt
				, s.sns_write_date
				, s.sns_tag
				, s.sns_hit
				, m.name
				, s.mem_id
				, g.grp_name
				, g.sns_grp_no
				,( SELECT COUNT(*)
				     FROM sns_like l
				    where l.sns_wrt_no = s.sns_wrt_no ) as like_cnt
				    
		from sns s
				join sns_grp g
		 			 on s.sns_grp_no = g.sns_grp_no
				join mem m
					 on s.mem_id = m.mem_id
		  
		order by s.sns_wrt_no desc
	</select>

	<select id="attachListAllSns" resultType="AttachVO">
		select a.attach_origin_name
		, a.attach_save_name
		, a.attach_path
		, a.attach_ext
		, a.attach_table_div
		, a.attach_table_pk
		FROM attach a JOIN SNS s
		ON a.attach_table_pk = s.sns_wrt_no
		WHERE a.attach_table_div= 's'
		AND s.sns_wrt_no = #{snsWrtNo}
	</select>


	<!-- SNS 단건조회 -->
	<resultMap type="SnsVO" id="snsSelectOne">
	<id column="sns_wrt_no" property="snsWrtNo"/>
		<collection property="attachList" javaType="ArrayList" column="sns_wrt_no"  ofType="AttachVO" select="attachListAllSns"></collection>
	</resultMap>
	<select id="selectSnsInfo" resultMap="snsSelectOne">
		select s.sns_wrt_no 
				, s.sns_title
				, s.sns_ctt
				, s.sns_write_date
				, s.sns_tag
				, s.sns_hit
				, m.name
				, s.mem_id
				, g.grp_name
				, g.sns_grp_no
				,( SELECT COUNT(*)
				    FROM sns_like l
				    where l.sns_wrt_no = s.sns_wrt_no ) as like_cnt
		from sns s
			join sns_grp g
			  on s.sns_grp_no = g.sns_grp_no
			join mem m
			  on s.mem_id = m.mem_id
        where sns_wrt_no= #{snsWrtNo}
	</select>


	<!-- SNS 등록 -->
	<insert id="insertSns" parameterType="SnsVO">
		<selectKey keyProperty="snsWrtNo,snsGrpNo"
			resultType="SnsVO" order="BEFORE">
			<!-- primarykey가 숫자일 경우 사용 -->
			SELECT(SELECT NVL(MAX(sns_wrt_no), 0) + 1
			FROM sns) sns_wrt_no,
			(SELECT NVL(MAX(sns_grp_no),0)+1
			FROM sns_grp) sns_grp_no
			FROM dual
		</selectKey>
		INSERT ALL
		INTO sns_grp
		(
		sns_grp_no
		,grp_create_date
		,post_num
		,grp_name
		)
		VALUES
		(
		#{snsGrpNo}
		,sysdate
		,#{postNum}
		,#{grpName}
		)
		INTO sns
		(
		sns_wrt_no
		,sns_title
		,sns_ctt
		,sns_tag
		,mem_id
		,sns_hit
		,sns_write_date
		,sns_grp_no
		)
		VALUES
		(
		#{snsWrtNo}
		,#{snsTitle}
		,#{snsCtt}
		,#{snsTag}
		,#{memId}
		,#{snsHit}
		,sysdate
		,#{snsGrpNo}
		)
		SELECT * FROM dual
	</insert>

	<!-- 회원이 누른 좋아요 select -->
	<select id="selectLikeNo" resultType="SnsVO">
		select like_no
		from sns_like
		where sns_wrt_no = #{snsWrtNo}
		and mem_id = #{memId}
	</select>

	<!-- sns 좋아요 등록 -->
	<insert id="insertLike" parameterType="SnsVO">
		<selectKey keyProperty="likeNo" resultType="int"
			order="BEFORE">
			select nvl(max(like_no),0)+1
			from sns_like
		</selectKey>
		INSERT INTO sns_like
		(
		like_no
		,mem_id
		,sns_wrt_no
		)
		VALUES
		(
		#{likeNo}
		,#{memId}
		,#{snsWrtNo}
		)
		<!-- <selectKey keyProperty="likeCnt" resultType="int" order="AFTER"> SELECT 
			COUNT(*) FROM sns_like where sns_wrt_no =#{snsWrtNo} </selectKey> -->
	</insert>


	<!-- 좋아요 삭제 -->
	<delete id="deleteLike" parameterType="int">
		DELETE FROM sns_like
		WHERE like_no = #{likeNo}
	</delete>
	

	<!-- sns 그룹 등록 -->
	<insert id="insertSnsGrp" parameterType="SnsVO">
		<selectKey keyProperty="snsGrpNo" resultType="int"
			order="BEFORE">
			<!-- primarykey가 숫자일 경우 사용 -->
			SELECT NVL(MAX(sns_grp_no), 0) + 1
			FROM sns_grp
		</selectKey>
		INSERT INTO sns_grp
		(
		sns_grp_no
		,grp_create_date
		,grp_name
		,mem_id
		)
		VALUES
		(
		#{snsGrpNo}
		,sysdate
		,#{grpName}
		,#{memId}
		)
	</insert>
	
	<!-- 회원당 그룹 조회 -->
	<select id="selectGroup" resultType="SnsVO">
		select sns_grp_no
			   ,grp_create_date
			   ,post_num
			   ,grp_name
			   ,grp_edit_date
			   ,mem_id
		from sns_grp g
		where mem_id = #{memId}
	</select>
	

	
	
	<!-- 수정 : 그룹업데이트 -->
	<update id="updateGrp" parameterType="SnsVO">

		update sns_grp
			set  grp_name = #{grpName}
		        ,grp_edit_date = sysdate
		   where sns_grp_no = #{snsGrpNo}
	</update>
	<!-- 수정 : SNS 업데이트 -->
	<update id="updateSns" parameterType="SnsVO">
		update sns
			set  sns_title = #{snsTitle}
		        ,sns_ctt = #{snsCtt}
		        ,sns_tag = #{snsTag}
		  where sns_wrt_no = #{snsWrtNo}
	</update>


	<!-- 삭제 -->
	
	<delete id="deleteSns" statementType="CALLABLE" parameterType="map">
	    {call DELETE_SNS(
            #{snsWrtNo, mode=IN, jdbcType=DECIMAL},
            #{delResult, mode=OUT, jdbcType=DECIMAL, javaType=long}
        	)
   		 }
	</delete>





</mapper>