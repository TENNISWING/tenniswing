<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="com.tenniswing.project.community.mapper.SnsMapper">
	<!-- 전체 조회 -->
	<resultMap type="SnsVO" id="snsResult">
	    <id column="sns_wrt_no" property="snsWrtNo"/>
		<collection property="attachList" javaType="ArrayList"
			column="sns_wrt_no" ofType="AttachVO" select="attachListAllSns">
		</collection>
	</resultMap>
	<select id="selectAllSnsInfo" resultMap="snsResult">
		SELECT s.sns_wrt_no 
				, s.sns_title
				, s.sns_ctt
				, s.sns_write_date
				, s.sns_tag
				, s.sns_hit
				, m.name
				, s.mem_id
				<!-- , g.grp_name
				, g.sns_grp_no -->
				,( SELECT COUNT(*)
				     FROM sns_like l
				    where l.sns_wrt_no = s.sns_wrt_no ) as like_cnt
				<if test='memId != null and memId != "".toString()'>
				, (select like_no
					from sns_like l
					where l.sns_wrt_no = s.sns_wrt_no
					and mem_id = #{memId}) as like_no
				</if>
				<if test='memId != null and memId != "".toString()'>
				, (select scrap_no
					from sns_scrap p
					where s.sns_wrt_no = p.sns_wrt_no
					and mem_id = #{memId}) as scrap_no
				</if>       
		FROM sns s
		<!-- 		join sns_grp g
		 			 on s.sns_grp_no = g.sns_grp_no -->
				join mem m
					 on s.mem_id = m.mem_id
		ORDER BY s.sns_wrt_no DESC
	</select>

	<select id="attachListAllSns" resultType="AttachVO">
		select a.attach_origin_name
		, a.attach_save_name
		, a.attach_path
		, a.attach_ext
		, a.attach_table_div
		, a.attach_table_pk
		FROM attach a JOIN SNS s
		ON a.attach_table_pk = s.sns_wrt_no
		WHERE a.attach_table_div= 's'
		AND s.sns_wrt_no = #{snsWrtNo}
	</select>


	<!-- SNS 단건조회 -->
	<resultMap type="SnsVO" id="snsSelectOne">
	<id column="sns_wrt_no" property="snsWrtNo"/>
		<collection property="attachList" javaType="ArrayList" column="sns_wrt_no"  ofType="AttachVO" select="attachListAllSns"></collection>
	</resultMap>
	<select id="selectSnsInfo" resultMap="snsSelectOne">
		SELECT s.sns_wrt_no 
				, s.sns_title
				, s.sns_ctt
				, s.sns_write_date
				, s.sns_tag
				, s.sns_hit
				, m.name
				, s.mem_id
				, g.grp_name
				, g.sns_grp_no
				,( SELECT COUNT(*)
				    FROM sns_like l
				    WHERE l.sns_wrt_no = s.sns_wrt_no ) as like_cnt
				<if test='memId != null and memId != "".toString()'>
				, (select like_no
					from sns_like l
					where l.sns_wrt_no = s.sns_wrt_no
					and mem_id = #{memId}) as like_no
				</if>
				<if test='memId != null and memId != "".toString()'>
				, (select scrap_no
					from sns_scrap p
					where s.sns_wrt_no = p.sns_wrt_no
					and mem_id = #{memId}) as scrap_no
				</if>       
		FROM sns s
		left outer JOIN sns_grp g
  					ON s.sns_grp_no = g.sns_grp_no
		JOIN mem m
  					ON s.mem_id = m.mem_id
        WHERE sns_wrt_no= #{snsWrtNo}
	</select>
	
<!-- 	
	<select id="selectSnsDetail">
			SELECT s.sns_wrt_no 
				, s.sns_title
				, s.sns_ctt
				, s.sns_write_date
				, s.sns_tag
				, s.sns_hit
				, m.name
				, s.mem_id
				, g.grp_name
				, g.sns_grp_no
				,( SELECT COUNT(*)
				    FROM sns_like l
				    WHERE l.sns_wrt_no = s.sns_wrt_no ) as like_cnt
				<if test='memId != null and memId != "".toString()'>
				, (select like_no
					from sns_like l
					where l.sns_wrt_no = s.sns_wrt_no
					and mem_id = #{memId}) as like_no
				</if>
				<if test='memId != null and memId != "".toString()'>
				, (select scrap_no
					from sns_scrap p
					where s.sns_wrt_no = p.sns_wrt_no
					and mem_id = #{memId}) as scrap_no
				</if>       
		FROM sns s
		left outer JOIN sns_grp g
  					ON s.sns_grp_no = g.sns_grp_no
		JOIN mem m
  					ON s.mem_id = m.mem_id
        WHERE sns_wrt_no= #{snsWrtNo}
	
	</select> -->
	
	<!-- memId와 snsWrtNo가 일치하는 단건 조회 editform에서 쓸거임 -->
	<select id="selectSnsOne" resultType = "SnsVO">
		SELECT sns_wrt_no
			   , sns_title
			   , sns_ctt
			   , sns_write_date
			   , sns_tag
			   , mem_id
			   , sns_grp_no
		FROM sns
		WHERE sns_wrt_no = #{snsWrtNo}
		AND mem_id = #{memId}
	</select>

	<!-- 내가 등록한 그룹 리스트 sns, sns_grp 다 데려옴 -->
	<select id="selectMyGroup" resultType="SnsVO">
	 	SELECT * FROM ( SELECT A.* , rownum rn FROM (	
			SELECT s.sns_wrt_no 
				, s.sns_title
				, s.sns_ctt
				, s.sns_write_date
				, s.sns_tag
				, s.sns_hit
				, m.name
				, s.mem_id
				, g.grp_name
				, g.sns_grp_no
				, g.grp_create_date
			FROM sns s
					left outer join sns_grp g
			 			 on s.sns_grp_no = g.sns_grp_no
					join mem m
						 on s.mem_id = m.mem_id
			WHERE s.mem_id = #{memId}
			<if test="snsGrpNo!=null">
			AND s.sns_grp_no = #{snsGrpNo}
			</if>
			<if test="snsGrpNo==null">
			AND s.sns_grp_no is null
			</if>		
			ORDER BY s.sns_write_date DESC
 					) A
	    ) B 
	  WHERE rn BETWEEN (#{page}-1)*#{pageUnit} + 1 and #{page} * #{pageUnit}
		
	</select>
	
	 
 	<!-- 전체 갯수 -->
  	<select id="selectCount" resultType="int">
   		SELECT 	count(*)
	  	FROM sns s
			 left outer join sns_grp g
					 on s.sns_grp_no = g.sns_grp_no
			join mem m
					 on s.mem_id = m.mem_id
		WHERE s.mem_id = #{memId}
		<if test="snsGrpNo!=null">
			and s.sns_grp_no = #{snsGrpNo}
			</if>
			<if test="snsGrpNo==null">
			and s.sns_grp_no is null
			</if>		
	</select>	 
	
	<!-- 해시태그 검색 -->
	<select id="snsTagSearch" resultType="SnsVO">
		SELECT *
		FROM sns
		WHERE sns_tag LIKE '%'||#{snsTag}||'%'
	</select>
	
	<!-- SNS 등록 -->
	<insert id="insertSns" parameterType="SnsVO">
		<selectKey keyProperty="snsWrtNo"
			resultType="int" order="BEFORE">
			SELECT NVL(MAX(sns_wrt_no), 0) + 1
			FROM sns
		</selectKey>
		INSERT INTO sns
		(
			sns_wrt_no
			,sns_title
			,sns_ctt
			,sns_tag
			,mem_id
			,sns_hit
			,sns_write_date
			,sns_grp_no
		)
		VALUES
		(
			#{snsWrtNo}
			,#{snsTitle}
			,#{snsCtt}
			,#{snsTag}
			,#{memId}
			,#{snsHit}
			,sysdate
			,#{snsGrpNo}
		)
	</insert>


	<!-- sns 좋아요 등록 -->
	<insert id="insertLike" parameterType="SnsVO">
		<selectKey keyProperty="likeNo" resultType="int" order="BEFORE">
			select nvl(max(like_no),0)+1
			from sns_like
		</selectKey>
		INSERT INTO sns_like
		(
			like_no
			,mem_id
			,sns_wrt_no
		)
		VALUES
		(
			#{likeNo}
			,#{memId}
			,#{snsWrtNo}
		)
	</insert>


	<!-- 좋아요 삭제 -->
	<delete id="deleteLike" parameterType="int">
		DELETE FROM sns_like
		WHERE like_no = #{likeNo}
	</delete>
	
 
	<!-- sns 그룹 등록 -->
	<insert id="insertSnsGrp" parameterType="SnsVO">
		<selectKey keyProperty="snsGrpNo" resultType="int"
			order="BEFORE">
			<!-- primarykey가 숫자일 경우 사용 -->
			SELECT NVL(MAX(sns_grp_no), 0) + 1
			FROM sns_grp
		</selectKey>
		INSERT INTO sns_grp
			(
				sns_grp_no
				,grp_create_date
				,grp_name
				,mem_id
			)
		VALUES
			(
				#{snsGrpNo}
				,sysdate
				,#{grpName}
				,#{memId}
			)
	</insert>
	
	<!-- 회원당 그룹 조회 -->
	<select id="selectGroup" resultType="SnsVO">
	select * from (
	select sns_grp_no
			   ,s.grp_create_date
			   ,s.post_num
			   ,s.grp_name
			   ,s.grp_edit_date
			   ,s.mem_id
			   ,m.name
		from sns_grp s, mem m
		where s.mem_id = m.mem_id
		and s.mem_id = #{memId}
	union 
    select null,
           to_date('1970/01/01','yyyy/MM/dd'),
           null,
           '기타',
           null,
           null,
           null
    from dual
           )order by grp_create_date desc
    	
	</select>
	
	<!-- sns 테이블에서 그룹번호가 null인 애들 조회 -->
	<!-- <select id="selectGrpNull" parameterType="SnsVO">
		select s.sns_wrt_no 
			, s.sns_title
			, s.sns_ctt
			, s.sns_write_date
			, s.sns_tag
			, s.sns_hit
			, m.name
			, s.mem_id
            , s.sns_grp_no
		from sns s
				join mem m
				on s.mem_id = m.mem_id
		where s.mem_id = #{memId}
		and s.sns_grp_no is null
	</select> -->
	
	
	<!-- 수정 : 그룹업데이트 -->
	<update id="updateGrp" parameterType="SnsVO">
		UPDATE sns_grp
			SET  grp_name = #{grpName}
		        ,grp_edit_date = sysdate
		   WHERE sns_grp_no = #{snsGrpNo}
	</update>
	<!-- 수정 : SNS 업데이트 -->
	<update id="updateSns" parameterType="SnsVO">
		UPDATE sns
			SET  sns_title = #{snsTitle}
		        ,sns_ctt = #{snsCtt}
		        ,sns_tag = #{snsTag}
		        ,sns_grp_no = #{snsGrpNo}
		  WHERE sns_wrt_no = #{snsWrtNo}
	</update>
	
	<!-- 스크랩 등록 -->
	<insert id="insertScrap" parameterType="SnsVO">
		<selectKey keyProperty="scrapNo" resultType="int"
			order="BEFORE">
			SELECT nvl(max(scrap_no),0)+1
			FROM sns_scrap
		</selectKey>
			INSERT INTO sns_scrap
			(
				scrap_no
				,mem_id
				,sns_wrt_no
			)
			VALUES
			(
				#{scrapNo}
				,#{memId}
				,#{snsWrtNo}
			)
	</insert>
	
	<!-- 스크랩 삭제 -->
	<delete id="deleteScrap" parameterType="int">
		DELETE FROM sns_scrap
		WHERE scrap_no = #{scrapNo}
		
	</delete>
	
	<!-- 첨부파일, 좋아요, 댓글, 그룹, sns 삭제 -->
	<delete id="deleteGrp" statementType="CALLABLE" parameterType="map">
		{ call DELETE_GRP(
				#{snsGrpNo, mode=IN, jdbcType=DECIMAL},
				#{delGrpResult, mode=OUT, jdbcType=DECIMAL, javaType=long}	
			)
		}
	</delete>
	
	<!-- sns 리플 좋아요 한번에 삭제 -->
	<delete id="deleteSns" statementType="CALLABLE" parameterType="map">
	    {call DELETE_SNS(
	            #{snsWrtNo, mode=IN, jdbcType=DECIMAL},
	            #{delResult, mode=OUT, jdbcType=DECIMAL, javaType=long}
        	)
   		 }
	</delete>





</mapper>