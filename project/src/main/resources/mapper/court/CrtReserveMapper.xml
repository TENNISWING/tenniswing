<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tenniswing.project.court.mapper.CrtReserveMapper">
<!-- 예약등록 -->
<insert id="insertCrtReserve" parameterType="CrtReserveVO">
	<selectKey keyProperty="reserveNo,reserveDetailNo"
			   resultType="CrtReserveVO"
			   order="BEFORE">
		SELECT  (SELECT NVL(MAX(reserve_no),0)+1
				  FROM reserve) reserve_no,
				(SELECT NVL(MAX(reserve_detail_no),0)+1
				   FROM reserve_detail_inf) reserve_detail_no
		FROM dual
	</selectKey>
	 INSERT ALL INTO reserve
	(
		RESERVE_NO
		, RESERVE_PRICE
		, CRTROOM_NO
		, CRT_DETAIL_NO
		, MEM_ID
		, RESERVE_PAY_NO
		, RESERVE_UID
	)
	VALUES
	(
		#{reserveNo}
		, #{reservePrice}
		, #{crtroomNo}
		, #{crtDetailNo}
		, #{memId}
		, #{reservePayNo}
		, #{reserveUid}
	)
	INTO reserve_detail_inf
	(
		RESERVE_DETAIL_NO
		, RESERVE_DATE
		, RESERVE_TIME
		, RESERVE_NO
	)
	VALUES
	(
		#{reserveDetailNo}
		, #{reserveDate}
		, #{reserveTime}
		, #{reserveNo}
	)
	SELECT * FROM dual
</insert>

<!-- 예약 불가능한 리스트 -->
<select id="impossibleReserveList" resultType="crtReserveVO">
	SELECT cdi.crt_detail_no
        , cdi.crt_use_price
        , cdi.use_unit_time
        , cdi.crt_indoor_outdoor
        , FIND_CATEGORY_NAME(cdi.crt_indoor_outdoor) crt_indoor_outdoor_name
        , rdi.reserve_date
        , rdi.reserve_time
        , FIND_CATEGORY_NAME(rdi.reserve_time) reserve_time_name
	FROM reserve r JOIN crt_detail_inf cdi
                ON cdi.crt_detail_no = r.crt_detail_no
                JOIN reserve_detail_inf rdi
                ON r.reserve_no = rdi.reserve_no
	WHERE TRUNC(rdi.reserve_date) = #{reserveDate}
	AND cdi.crt_detail_no = #{crtDetailNo}
</select>

<!-- 예약시간 구분코드 -->
<select id="reserveTimeCodeList" resultType="crtReserveVO">
	SELECT subcategory_code, name
	  FROM subcategory
	 WHERE maincategory_code = 'BG'
	 ORDER BY 2
</select>


<!-- 마이페이지 예약 목록  -->
<select id="selectMyCourtReverse" resultType="map">
	SELECT r.RESERVE_NO
		, r.RESERVE_PRICE
		, r.CRTROOM_NO
		, r.CRT_DETAIL_NO
		, r.MEM_ID
		, FIND_CATEGORY_NAME(r.RESERVE_STATE) as RESERVE_STATE
		, rd.RESERVE_DATE
		, r.RESERVE_PAY_NO
		, r.PAY_DATE
		, crt.crtroom_name
		, r.RESERVE_UID
	FROM reserve r JOIN crtroom crt
		ON r.crtroom_no = crt.crtroom_no
		JOIN reserve_detail_inf rd
		ON r.reserve_no = rd.reserve_no
	WHERE r.mem_id = #{memId}
	ORDER BY r.pay_date
</select>

<!-- 호스트 -->
<!-- 호스트별 예약 전체 조회 -->
<select id="selectAllCrtReserve" resultType="CrtReserveVO">
	SELECT r.RESERVE_NO
			, r.RESERVE_PRICE
			, r.RESERVE_STATE
			, FIND_CATEGORY_NAME(r.RESERVE_STATE) reserve_state_name
			, r.RESERVE_PAY_NO
			, r.CRTROOM_NO
			, r.CRT_DETAIL_NO
			, r.MEM_ID
			, r.RESERVE_UID
			, r.PAY_DATE
			, rd.RESERVE_DETAIL_NO
			, rd.RESERVE_DATE
			, rd.RESERVE_TIME
			, FIND_CATEGORY_NAME(rd.RESERVE_TIME) RESERVE_TIME_NAME
			, c.crtroom_name
	FROM reserve r JOIN crtroom c 
					ON r.crtroom_no = c.crtroom_no
				   JOIN reserve_detail_inf rd
				    ON r.reserve_no = rd.reserve_no
	WHERE c.host_id = #{hostId}
</select>

<!-- 코트별 예약 조회 -->
<select id="selectAllCrtDeReserve" resultType="CrtReserveVO">
	SELECT r.RESERVE_NO
			, r.RESERVE_PRICE
			, r.RESERVE_STATE
			, FIND_CATEGORY_NAME(r.RESERVE_STATE) reserve_state_name
			, r.RESERVE_PAY_NO
			, r.CRTROOM_NO
			, r.CRT_DETAIL_NO
			, r.MEM_ID
			, r.RESERVE_UID
			, r.PAY_DATE
			, rd.RESERVE_DETAIL_NO
			, rd.RESERVE_DATE
			, rd.RESERVE_TIME
			, FIND_CATEGORY_NAME(rd.RESERVE_TIME) RESERVE_TIME_NAME
			, c.crtroom_name
	FROM reserve r JOIN crtroom c 
					ON r.crtroom_no = c.crtroom_no
				   JOIN reserve_detail_inf rd
				    ON r.reserve_no = rd.reserve_no
	WHERE c.host_id = #{hostId}
	AND r.crtroom_no = #{crtroomNo}
</select>

<!-- 호스트별 환불 전체 조회 -->
<select id="selectAllCrtRefund" resultType="CrtReserveVO">
	SELECT r.reserve_no
			, c.crtroom_name
			, r.mem_id
			, r.reserve_price
			, r.reserve_pay_no
			, r.crtroom_no
			, r.crt_detail_no
			, r.reserve_uid
			, r.pay_date
			, rd.reserve_detail_no
			, rd.reserve_date
			, rd.reserve_time
			, FIND_CATEGORY_NAME(rd.RESERVE_TIME) RESERVE_TIME_NAME
			, r.crtroom_no
			, rc.cancel_date
			, rc.refund_price
			, rc.refund_charge
			, rc.reserve_cancel_no
	FROM reserve r JOIN reserve_cancel rc
							ON rc.reserve_no = r.reserve_no
							JOIN reserve_detail_inf rd
							ON rc.reserve_no = rd.reserve_no
							JOIN crtroom c
							ON r.crtroom_no = c.crtroom_no
	WHERE c.host_id = #{hostId}
</select>


<!-- 호스트별 정산 전체 조회 -->
<select id="selectAllCrtCalc" resultType="CrtReserveVO">
	SELECT CALC_NO
			, CALC_DATE
			, CALC_PRICE
			, PAY_PRICE
			, CALC_STATE
			, FIND_CATEGORY_NAME(calc_state) calc_state_name
			, PAY_CASE
			, CALC_START_DATE
			, CALC_END_DATE
	FROM crt_calc
	WHERE host_id = #{hostId}
</select>

<!-- 환불 정보 입력 -->
<insert id="insertCrtRefund" parameterType="CrtReserveVO">
	<selectKey keyProperty="reserveCancelNo"
			   resultType="int"
			   order="BEFORE">
		SELECT NVL(MAX(reserve_cancel_no),0)+1
	    FROM reserve_cancel
	</selectKey>
	INSERT INTO reserve_cancel
	(
		CANCEL_DATE
		, REFUND_PRICE
		, REFUND_CHARGE
		, RESERVE_CANCEL_NO
		, REFUND_REASON
		, RESERVE_NO
	)
	VALUES
	(
		SYSDATE
		, #{refundPrice}
		, #{refundCharge}
		, #{reserveCancelNo}
		, #{refundReason}
		, #{reserveNo}
	)
</insert>
<!-- 환불 후 상태 변경 -->
<update id="updateCrtReserveState" parameterType="CrtReserveVO">
	UPDATE reserve
		SET reserve_state = 'i3'
		WHERE reserve_no = #{reserveNo}
</update>

<!-- 예약날짜 지나면 상태변경 -->
<update id="updateState" parameterType="CrtReserveVO">
	UPDATE reserve
		SET reserve_state = 'i2'
		WHERE reserve_no IN (select reserve_no
							from reserve_detail_inf
							where TO_CHAR(reserve_date,'yyyy-MM-dd') <![CDATA[<]]> TO_CHAR(#{reserveDate},'yyyy-MM-dd'))
		AND reserve_state = 'i1'
</update>

<!-- 이번달 예약금액, 예약건수 -->
<select id="hostMonthReserve" resultType="HostDashBoardVO">
 	SELECT sum(r.reserve_price) month_reserve_price, count(*) month_reserve_count
	FROM reserve r JOIN reserve_detail_inf rd
	                ON r.reserve_no = rd.reserve_no
                    JOIN crtroom c
                    ON c.crtroom_no = r.crtroom_no
	WHERE EXTRACT (month from rd.reserve_date) = EXTRACT (month from SYSDATE)
	AND c.host_id= #{hostId}
</select>
  	
<!-- 이번달 환불금액, 환불건수 -->
<select id="hostMonthRefund" resultType="HostDashBoardVO">
  	SELECT sum(rc.refund_price) month_refund_price, count(*) month_refund_count
	FROM reserve_cancel rc JOIN reserve r
                            ON rc.reserve_no = r.reserve_no
                            JOIN crtroom c
                            ON r.crtroom_no = c.crtroom_no
	WHERE EXTRACT (month from rc.cancel_date) = EXTRACT (month from SYSDATE)
    AND c.host_id = #{hostId}
</select>
 
<!-- 오늘의 예약 -->
<select id="todayReserve" resultType="CrtReserveVO">
	SELECT r.mem_id
			, c.crtroom_name
			, rd.reserve_date 
	FROM reserve r JOIN crtroom c
                   ON r.crtroom_no = c.crtroom_no
                   JOIN reserve_detail_inf rd
                   ON r.reserve_no = rd.reserve_no
	WHERE TO_CHAR(r.pay_date,'yyyy-MM-dd') = TO_CHAR(sysdate,'yyyy-MM-dd')
    AND c.host_id = #{hostId}
</select>

<!-- 올해 월별 예약금액 -->
<select id="thisYearMonthPrice" resultType="HostDashBoardVO">
	SELECT (select sum(reserve_price) from reserve where EXTRACT(month from pay_date) = 1) JAN
        ,(select sum(reserve_price) from reserve where EXTRACT(month from pay_date) = 2) FEB
        ,(select sum(reserve_price) from reserve where EXTRACT(month from pay_date) = 3) MAR
        ,(select sum(reserve_price) from reserve where EXTRACT(month from pay_date) = 4) APR
        ,(select sum(reserve_price) from reserve where EXTRACT(month from pay_date) = 5) MAY
        ,(select sum(reserve_price) from reserve where EXTRACT(month from pay_date) = 6) JUN
        ,(select sum(reserve_price) from reserve where EXTRACT(month from pay_date) = 7) JUL
        ,(select sum(reserve_price) from reserve where EXTRACT(month from pay_date) = 8) AUG
        ,(select sum(reserve_price) from reserve where EXTRACT(month from pay_date) = 9) SEP
        ,(select sum(reserve_price) from reserve where EXTRACT(month from pay_date) = 10) OCT
        ,(select sum(reserve_price) from reserve where EXTRACT(month from pay_date) = 11) NOV
        ,(select sum(reserve_price) from reserve where EXTRACT(month from pay_date) = 12) DEC
	FROM reserve r JOIN crtroom c
                    ON r.crtroom_no = c.crtroom_no
	WHERE EXTRACT(year from pay_date) = EXTRACT(year from sysdate)
    AND c.host_id = #{hostId}
	AND <![CDATA[rownum = 1]]>
</select>

<!-- 최근 후기 5개 -->
<select id="recentReview" resultType="CrtroomVO">
	SELECT * FROM (SELECT r.mem_id
	        , r.review_ctt
	        , r.review_write_date
	        , r.review_star
	        , c.crtroom_name
	FROM review r JOIN crtroom c
	                ON r.crtroom_no = c.crtroom_no
	WHERE c.host_id = #{hostId}
    ORDER BY r.review_write_date)
	WHERE <![CDATA[rownum < 6]]>
</select>

<!-- 호스트 간단정보 -->
<select id="hostInfo" resultType="HostDashBoardVO">
	SELECT m.mem_id , m.name, a.attach_path 
	FROM mem m LEFT OUTER JOIN attach a
	ON m.mem_no = a.attach_table_pk
	AND a.attach_table_div = 'm'
	WHERE m.mem_id = #{hostId}
</select>

<!-- 별점통계 -->
<select id="hostStarInfo" resultType="HostDashBoardVO">
	SELECT (select count(*) from review where review_star = 5) five
	        , (select count(*) from review where review_star = 4) four
	        , (select count(*) from review where review_star = 3) three
	        , (select count(*) from review where review_star = 2) two
	        , (select count(*) from review where review_star = 1) one
	FROM review r JOIN crtroom c
	                ON r.crtroom_no = c.crtroom_no
	WHERE c.host_id = #{hostId}
	AND <![CDATA[rownum = 1]]>
</select>
</mapper>