<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.tenniswing.project.shop.mapper.ProdMapper">
  	
  	<!-- 검색 조건 -->  	
  	<sql id="criteria">
  		<if test="cateProd != null and cateProd != 'none'">
			AND cate_prod = #{cateProd}
		</if>
		<if test="cateGen != null and cateGen != 'none'">
			AND cate_gen = #{cateGen}
		</if>
		<if test="prodName != null and prodName != ''">
			AND prod_name LIKE '%'||#{prodName}||'%'
		</if>
  	</sql>
  	
  	<!-- 전체 조회 -->
  	<select id="selectAllProd" resultType="ProdVO">
  		SELECT * FROM ( SELECT A.* , rownum rn FROM (
							  			SELECT 	p.prod_no,
							  					p.prod_name,
							  					p.prod_brand,
							  					p.prod_t_sto,
							  					p.prod_price,
							       				p.prod_regi_date,
							       				FIND_CATEGORY_NAME(p.prod_sale_sts) AS prod_sale_sts,
							       				FIND_CATEGORY_NAME(p.cate_prod) AS cate_prod,
							       				FIND_CATEGORY_NAME(p.cate_gen) AS cate_gen,
							       				TRUNC(SUM(prod_review_star)/COUNT(prod_review_no)) avg_star, 
							       				COUNT(prod_review_no) prod_review,
							       				a.attach_path       
										FROM 	prod p, attach a, prod_review pr
										WHERE	p.prod_no = a.attach_table_pk
										AND		p.prod_no = pr.prod_no (+)
										AND		a.attach_table_div = 'p'
										AND		p.prod_sale_sts = 'p1'
										AND 	a.attach_turn = 1
										<include refid="criteria"></include>
										GROUP BY p.prod_no,
							  					 p.prod_name,
							  					 p.prod_brand,
							  					 p.prod_t_sto,
							  					 p.prod_price,
							       				 p.prod_regi_date,
							       				 p.prod_sale_sts,
							       				 p.cate_prod,
							       				 p.cate_gen,
							       				 a.attach_path
								  		ORDER BY ${sort}
  									) A 
  					) B
  		WHERE rn BETWEEN (#{page} - 1) * #{pageUnit} + 1 AND #{page} * #{pageUnit}
  	</select>
  	
  	<!-- 상품 어드민 전체 갯수 -->
  	<select id="selectAdminAllCount" resultType="int">
 		select 	count(*) AS prod_all_count	
   		FROM 	prod 
  	</select>
  	
  	<!-- 전체 조회 -->
  	<select id="selectAdminAllProd" resultType="ProdVO">
 		SELECT 	p.prod_no, 
 		        p.prod_name, 
 		        p.prod_brand, 
 		        p.prod_t_sto, 
 		        p.prod_price,
      			p.prod_regi_date, 
      			FIND_CATEGORY_NAME(p.prod_sale_sts) AS prod_sale_sts,
      			FIND_CATEGORY_NAME(p.cate_prod) AS cate_prod, 
      			FIND_CATEGORY_NAME(p.cate_gen) AS cate_gen,
      			a.attach_path      
		FROM 	prod p, attach a
		WHERE	p.prod_no = a.attach_table_pk
		AND		a.attach_table_div = 'p'
		AND 	a.attach_turn = 1
  		ORDER BY prod_no
  	</select>
  	
  	<!-- 전체 갯수 -->
  	<select id="selectCount" resultType="int">
   		select 	count(*)
   		FROM 	prod
   		WHERE	prod_sale_sts = 'p1'
  		<include refid="criteria"></include>
   	</select>
  	
  	<!-- 조회수 상품 스와이퍼 -->
  	<select id="selectSwiperProd" resultType="ProdVO">
  		SELECT 	* 
		FROM 	(SELECT		p.prod_no, p.prod_name, p.prod_brand, p.prod_price, p.prod_regi_date,
			  				FIND_CATEGORY_NAME(p.prod_sale_sts) AS prod_sale_sts, a.attach_path,
			  				TRUNC(SUM(prod_review_star)/COUNT(prod_review_no)) avg_star, COUNT(prod_review_no) prod_review       
				 FROM 		prod p, attach a, prod_review pr
				 WHERE		p.prod_no = a.attach_table_pk
				 AND		p.prod_no = pr.prod_no (+)
				 AND		p.prod_sale_sts = 'p1'
				 AND		a.attach_table_div = 'p'
				 AND 		a.attach_turn = 1
				 GROUP BY	p.prod_no, p.prod_name, p.prod_brand, p.prod_price, p.prod_regi_date, 
				 			p.prod_sale_sts, a.attach_path, p.prod_hit
			  	 ORDER BY	p.prod_hit DESC)
		WHERE <![CDATA[rownum < 8]]>
  	</select>
  	
  	<!-- 관련 상품 스와이퍼 -->
  	<select id="relatedSwiperProd" parameterType="ProdVO" resultType="ProdVO">
  		SELECT 	* 
		FROM 	(SELECT		p.prod_no, p.prod_name, p.prod_brand, p.prod_price, p.prod_regi_date,
			  				FIND_CATEGORY_NAME(p.prod_sale_sts) AS prod_sale_sts, a.attach_path,
			  				TRUNC(SUM(prod_review_star)/COUNT(prod_review_no)) avg_star, COUNT(prod_review_no) prod_review       
				 FROM 		prod p, attach a, prod_review pr
				 WHERE		p.prod_no = a.attach_table_pk
				 AND		p.prod_no = pr.prod_no (+)
				 AND		p.prod_sale_sts = 'p1'
				 AND		p.cate_prod	= FIND_CATEGORY_CODE(#{cateProd})
				 AND		p.prod_no <![CDATA[<>]]> #{prodNo}
				 AND		a.attach_table_div = 'p'
				 AND 		a.attach_turn = 1
				 GROUP BY	p.prod_no, p.prod_name, p.prod_brand, p.prod_price, p.prod_regi_date, 
				 			p.prod_sale_sts, a.attach_path, p.prod_hit
			  	 ORDER BY	p.prod_hit DESC)
		WHERE <![CDATA[rownum < 8]]>
  	</select>
  	
  	<!-- 단건 조회 -->
  	<select id="selectProd" resultType="ProdVO">
  		SELECT 	p.prod_no,
  				p.prod_name,
  				p.prod_brand,
  				p.prod_t_sto, 
       			p.prod_exp,
       			p.prod_regi_date,
       			p.prod_price,
       			FIND_CATEGORY_NAME(p.prod_sale_sts) AS prod_sale_sts,
       			FIND_CATEGORY_NAME(p.cate_prod) AS cate_prod,
       			FIND_CATEGORY_NAME(p.cate_gen) AS cate_gen,
       			a.attach_path       
		FROM 	prod p, attach a
		WHERE	p.prod_no = a.attach_table_pk
		AND 	p.prod_no = #{prodNo}
		AND		a.attach_table_div = 'p'
		AND 	a.attach_turn = 1
  	</select>
  	
  	<!-- 상품 등록 -->
  	<insert id="insertProd" parameterType="ProdVO">
  		<selectKey keyProperty="prodNo"
  				   resultType="int"
  				   order="BEFORE">
  			SELECT NVL(MAX(prod_no), 0) + 1
  			FROM prod		   
  		</selectKey>
  		INSERT INTO prod(
  			 prod_no,
  			 prod_name,
  			 prod_brand,
  			 prod_t_sto,
  			 prod_price,
  			 prod_exp,
  			 prod_sale_sts,
  			 prod_regi_date,
  			 cate_prod,
  			 cate_gen  
  		)
  		VALUES(
  			 #{prodNo},
  			 #{prodName},
  			 #{prodBrand},
  			 0,
  			 #{prodPrice},
  			 #{prodExp},
  			 #{prodSaleSts},
  			 SYSDATE,
  			 #{cateProd},
  			 #{cateGen}
  		)
  	</insert>
  	
  	<!-- 상품 수정 -->
  	<update id="updateProd" parameterType="ProdVO">
  		UPDATE prod
  			<set>
  				<if test="prodName != null and !prodName.equals('')">
  					prod_name = #{prodName},
  				</if>
  				<if test="prodBrand != null and !prodBrand.equals('')">
  					prod_brand = #{prodBrand},
  				</if>
  				<if test="cateProd != null and !cateProd.equals('')">
  					cate_prod = #{cateProd},
  				</if>
  				<if test="cateGen != null and !cateGen.equals('')">
  					cate_gen = #{cateGen},
  				</if>
  				<if test="prodPrice != 0 and !prodPrice.equals('')">
  					prod_price = #{prodPrice},
  				</if>
  				<if test="prodSaleSts != null and !prodSaleSts.equals('')">
  					prod_sale_sts = #{prodSaleSts},
  				</if>
  				<if test="prodExp != null and !prodExp.equals('')">
  					prod_exp = #{prodExp},
  				</if>
  				<if test="prodTSto != null and !prodTSto.equals('')">
  					prod_t_sto = #{prodTSto},
  				</if>
  				prod_edit_date = SYSDATE	
  			</set>
 		WHERE prod_no = #{prodNo} 				
  	</update>
  	
  	<!-- 조회수 -->
  	<update id="updateProdHit" parameterType="int">
  		UPDATE 	prod
  		SET		prod_hit = prod_hit + 1
  		WHERE	prod_no = #{prodNo}
  	</update>
  	
  	<!-- 상품 주문 후 재고 처리 -->
  	<update id="updateOrderProd" parameterType="int">
  		UPDATE	prod
  		SET		prod_t_sto = prod_t_sto - #{prodDetailSto}
  		WHERE	prod_no = #{prodNo}
  	</update>

  	
  	<!-- 상품 삭제 -->
  	<delete id="deleteProd" parameterType="int">
  		DELETE FROM prod
  		WHERE prod_no = #{prodNo}
  	</delete>
  	
  	<!-- 후기 등록 권한여부 -->
  	<select id="confirmInsertReview" resultType="int">
  		SELECT *
  		FROM   (SELECT ot.order_no
			    FROM order_table ot, order_detail od
			    WHERE ot.order_no = od.order_no
			    AND od.prod_detail_no IN (SELECT prod_detail_no
			                              FROM prod_detail
			                              WHERE prod_no = #{prodNo})
			    AND ot.mem_id = #{memId}
			    AND ot.order_state = 's5'
			    ORDER BY ot.order_no desc)
  		WHERE <![CDATA[rownum = 1]]>
  	</select>
  	
  	<!-- 후기 등록 -->
	<insert id="insertProdReview" parameterType="prodVO">
  		<selectKey keyProperty="prodReviewNo" resultType="int" order="BEFORE">
  			SELECT NVL(MAX(prod_review_no), 0) + 1
  			FROM prod_review		   
  		</selectKey>
  		INSERT INTO prod_review
  			(
  				PROD_REVIEW_NO
				, MEM_ID
				, PROD_REVIEW_CTT
				, PROD_REVIEW_STAR
				, PROD_REVIEW_REGI_DATE
				, ORDER_TABLE_NO
				, PROD_NO
  			)
  			VALUES
  			(
  				#{prodReviewNo}
  				, #{memId}
  				, #{prodReviewCtt}
  				, #{prodReviewStar}
  				, SYSDATE
  				, #{orderTableNo}
  				, #{prodNo}
  			)
  	</insert>
  	
  	<!-- 상품별 후기 조회 -->
	<select id="selectProdReview" resultType="prodVO">
		SELECT r.mem_id
				, r.prod_review_ctt
				, r.prod_review_star
				, r.prod_review_regi_date
				, r.prod_review_edit_date
				, r.order_table_no
				, a.attach_path
				, r.prod_review_no
		FROM prod_review r LEFT OUTER JOIN attach a
						ON r.prod_review_no = a.attach_table_pk
						AND a.attach_table_div = 'pr'
		WHERE r.prod_no = #{prodNo}
		ORDER BY 4 desc
	</select>
	
	<!-- 후기 삭제 -->
  	<delete id="deleteProdReview" parameterType="int">
  		DELETE FROM prod_review
  		WHERE prod_review_no = #{prodReviewNo}
  	</delete>
  	
  	<!-- 후기 사진 삭제 -->
  	<delete id="deleteReviewImg" parameterType="int">
  		DELETE FROM attach
  		WHERE attach_table_div = 'pr'
  		AND attach_table_pk = #{prodReviewNo}
  	</delete>
  	
  	<!-- 코트 별점 -->
	<select id="prodStar" resultType="ProdVO">
		SELECT TRUNC(SUM(prod_review_star)/COUNT(prod_review_no)) avg_star, COUNT(prod_review_no) prod_review
        FROM prod_review
        WHERE prod_no = #{prodNO}
	</select>
	
  </mapper>